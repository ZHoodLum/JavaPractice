<?xml version="1.0" encoding="UTF-8"?>
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出-->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数-->
<Configuration monitorInterval="5">
    <Properties>
        <property name="LOG_PATH">./logs</property>
        <property name="LOG_FILE_NAME">javaProactive</property>
        <!-- 格式化输出：%date表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度 %msg：日志消息，%n是换行符-->
        <!-- %logger{36} 表示 Logger 名字最长36个字符 -->
        <property name="LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %-5level %class{36} %L %M - %msg%n" />
    </Properties>
    <!--定义logger并引入appender, 上面的appender才会生效-->
    <Loggers>
        <logger name="org.mybatis" level="INFO"/>
        <!--监控系统信息-->
        <!--若是additivity设为false，则 子Logger 只会在自己的appender里输出，而不会在 父Logger 的appender里输出。-->
        <Logger name="org.springframework" level="info" additivity="false">
            <AppenderRef ref="Console"/>
        </Logger>

        <Root level="error">
            <AppenderRef ref="Console"/>
            <AppenderRef ref="RollingInfo" />
            <AppenderRef ref="RollingError" />
        </Root>
    </Loggers>

    <Appenders>
        <console name="Console" target="SYSTEM_OUT">
            <!--输出日志的格式-->
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <!--控制台只输出level及其以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <ThresholdFilter level="debug" onMatch="ACCEPT" onMismatch="DENY"/>
        </console>

        <!--文件会打印出所有信息，这个log每次运行程序会自动清空，由append属性决定，这个也挺有用的，适合临时测试用-->
        <!--        <File name="Filelog" fileName="log/test.log" append="false">-->
        <!--            &lt;!&ndash;%date表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度 %msg：日志消息，%n是换行符  &ndash;&gt;-->
        <!--            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %class{36} %L %M - %msg%xEx%n"/>-->
        <!--        </File>-->

        <!-- 这个会打印出所有的info及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <RollingFile name="RollingInfo" fileName="${LOG_PATH}/${LOG_FILE_NAME}-info.log"
                     filePattern="${LOG_PATH}/$${date:yyyy-MM}/${LOG_FILE_NAME}info-%d{yyyy-MM-dd HH-mm}-%i.log" immediateFlush="true">
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <Policies>
                <!--interval属性用来指定多久滚动一次，默认是1 hour-->
                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
                <!--文件大小-->
                <SizeBasedTriggeringPolicy size="10kb" />
            </Policies>
            <!-- -最多文件保留数 DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了20 -->
            <DefaultRolloverStrategy max="20" />
        </RollingFile>

        <RollingFile name="RollingError" fileName="${LOG_PATH}/${LOG_FILE_NAME}-error.log"
                     filePattern="${LOG_PATH}/$${date:yyyy-MM}/${LOG_FILE_NAME}error-%d{yyyy-MM-dd HH-mm}-%i.log" immediateFlush="true">
            <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <Policies>
                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
                <!--文件大小-->
                <SizeBasedTriggeringPolicy size="10kb" />
            </Policies>
            <!-- -最多文件保留数 DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了20 -->
            <DefaultRolloverStrategy max="20" />
        </RollingFile>
    </Appenders>
</Configuration >